<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cxiada&#39;s blog</title>
  
  <subtitle>职业码农</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://Cxiada.github.io/"/>
  <updated>2018-10-08T07:57:57.773Z</updated>
  <id>https://Cxiada.github.io/</id>
  
  <author>
    <name>xdChen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的衣库</title>
    <link href="https://Cxiada.github.io/2018/10/08/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/"/>
    <id>https://Cxiada.github.io/2018/10/08/我的衣库/</id>
    <published>2018-10-08T05:14:17.000Z</published>
    <updated>2018-10-08T07:57:57.773Z</updated>
    
    <content type="html"><![CDATA[<p>下面是我所拥有的一部分衣服。<br><a id="more"></a>  </p><h2 id="内衣-睡衣"><a href="#内衣-睡衣" class="headerlink" title=" 内衣+睡衣"></a><font color="#9F79EE"> 内衣+睡衣</font></h2><table><tr>                                                       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%86%85%E8%A1%A31.jpg">1号 </center></td>       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%86%85%E8%A1%A32.jpg">2号</center></td>  </tr>                                                           <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%86%85%E8%A1%A33.jpg">3号</center></td>     <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%86%85%E8%A1%A34.jpg">4号</center> </td>   </tr>                                                           <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9D%A1%E8%A1%A31.jpg">5号</center></td>     <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9D%A1%E8%A1%A32.jpg">6号</center> </td>   </tr> </table>  <h2 id="短袖"><a href="#短袖" class="headerlink" title="短袖"></a><font color="#9F79EE">短袖</font></h2><table><tr>                                                       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9F%AD%E8%A2%961.jpg">1号 </center></td>       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9F%AD%E8%A2%962.jpg">2号</center></td> </tr> <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9F%AD%E8%A2%963.jpg">3号</center></td>     <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9F%AD%E8%A2%964.jpg">4号</center> </td></tr>  <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9F%AD%E8%A2%965.jpg">5号 </center></td><br> </table>  <h2 id="长袖"><a href="#长袖" class="headerlink" title="长袖"></a><font color="#9F79EE">长袖</font></h2><table><tr>                                                       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A2%961.jpg">1号 </center></td>       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A2%962.jpg">2号</center></td> </tr> <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A2%963.jpg">3号</center></td>     <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A2%964.jpg">4号</center></td>  </tr><br> </table><h2 id="毛衣"><a href="#毛衣" class="headerlink" title="毛衣"></a><font color="#9F79EE">毛衣</font></h2><table><tr>                                                       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E6%AF%9B%E8%A1%A31.jpg">1号 </center></td>       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E6%AF%9B%E8%A1%A32.jpg">2号</center></td> </tr> <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E6%AF%9B%E8%A1%A33.jpg">3号</center></td>     </tr><br> </table><h2 id="外衣"><a href="#外衣" class="headerlink" title="外衣"></a><font color="#9F79EE">外衣</font></h2><table><tr>                                                       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%A4%96%E8%A1%A31.jpg">1号 </center></td>       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%A4%96%E8%A1%A32.jpg">2号</center></td> </tr> <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%A4%96%E8%A1%A33.jpg">3号</center></td>     <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%A4%96%E8%A1%A34.jpg">4号 </center></td> </tr> <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%A4%96%E8%A1%A35.jpg">5号</center></td>     <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E5%A4%96%E8%A1%A36.jpg">6号 </center></td>   </tr><br> </table>  <h2 id="短裤"><a href="#短裤" class="headerlink" title="短裤"></a><font color="#9F79EE">短裤</font></h2> <table><tr>                                                       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9F%AD%E8%A3%A41.jpg">1号 </center></td>       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9F%AD%E8%A3%A42.jpg">2号</center></td> </tr> <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9F%AD%E8%A3%A43.jpg">3号</center></td>     <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E7%9F%AD%E8%A3%A44.jpg">4号 </center></td> </tr><br> </table>  <h2 id="长裤"><a href="#长裤" class="headerlink" title="长裤"></a><font color="#9F79EE">长裤</font></h2><table><tr>                                                       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A3%A41.jpg">1号 </center></td>       <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A3%A42.jpg">2号</center></td> </tr> <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A3%A43.jpg">3号</center></td>     <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A3%A44.jpg">4号 </center></td> </tr> <tr><td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A3%A45.jpg">5号</center></td>     <td><center><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/%E6%88%91%E7%9A%84%E8%A1%A3%E5%BA%93/%E9%95%BF%E8%A3%A46.jpg">6号 </center></td>   </tr><br> </table>  ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下面是我所拥有的一部分衣服。&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="https://Cxiada.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="日常" scheme="https://Cxiada.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="衣服" scheme="https://Cxiada.github.io/tags/%E8%A1%A3%E6%9C%8D/"/>
    
  </entry>
  
  <entry>
    <title>C++中cout输出格式</title>
    <link href="https://Cxiada.github.io/2018/09/18/C++%E4%B8%ADcout%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F/"/>
    <id>https://Cxiada.github.io/2018/09/18/C++中cout输出格式/</id>
    <published>2018-09-18T15:37:14.000Z</published>
    <updated>2018-09-18T16:04:22.291Z</updated>
    
    <content type="html"><![CDATA[<p>C++中cout的日常使用<br><a id="more"></a></p><h2 id="控制输出格式"><a href="#控制输出格式" class="headerlink" title="控制输出格式"></a>控制输出格式</h2><p><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/C%2B%2B%E4%B8%ADcout%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F/20180918113953583.png" alt="cout输出格式控制"></p><p>##控制格式输出<br><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/C%2B%2B%E4%B8%ADcout%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F/20180918114535596.png" alt="cout格式输出控制"></p><hr><h2 id="使用样例"><a href="#使用样例" class="headerlink" title="使用样例"></a>使用样例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt; //使用流对象成员函数</span><br><span class="line">#include &lt;iomanip&gt;//使用控制符设置</span><br><span class="line">using namespace std;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int a = 31;</span><br><span class="line">    cout.width(8);  //使用流对象成员函数</span><br><span class="line">    cout.fill(&apos;*&apos;);</span><br><span class="line">    cout.unsetf(ios::dec);</span><br><span class="line">    cout.setf(ios::hex);</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; setw(8) &lt;&lt; setfill(&apos;*&apos;) &lt;&lt; resetiosflags(ios::dec) &lt;&lt; setiosflags(ios::hex) &lt;&lt; a &lt;&lt; endl;  //使用控制符设置</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>参考自<a href="https://blog.csdn.net/u012707739/article/details/77824635" target="_blank" rel="noopener">乌托的博客</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C++中cout的日常使用&lt;br&gt;
    
    </summary>
    
      <category term="C/C++" scheme="https://Cxiada.github.io/categories/C-C/"/>
    
    
      <category term="C/C++" scheme="https://Cxiada.github.io/tags/C-C/"/>
    
      <category term="cout" scheme="https://Cxiada.github.io/tags/cout/"/>
    
  </entry>
  
  <entry>
    <title>C++复习一：语言基础</title>
    <link href="https://Cxiada.github.io/2018/09/18/C++%E5%A4%8D%E4%B9%A0%E4%B8%80%EF%BC%9A/"/>
    <id>https://Cxiada.github.io/2018/09/18/C++复习一：/</id>
    <published>2018-09-18T15:06:09.000Z</published>
    <updated>2018-09-19T15:38:15.123Z</updated>
    
    <content type="html"><![CDATA[<ul><li>算术类型</li><li>变量初始化</li><li>const|constexpr</li><li>auto|decltype</li><li>类型转换<a id="more"></a>  </li></ul><h2 id="算术类型"><a href="#算术类型" class="headerlink" title="算术类型"></a>算术类型</h2><table><thead><tr><th>布尔类型</th><th>bool</th></tr></thead><tbody><tr><td>字符类型</td><td>char</td></tr><tr><td>整数类型</td><td>int  / long</td></tr><tr><td>浮点类型</td><td>float /  double</td></tr></tbody></table><p>用<font color="#EE0000"> <strong>sizeof</strong></font>求解占用的内存字节数<br>带符号 signed<br>不带符号 unsigned</p><h2 id="变量初始化"><a href="#变量初始化" class="headerlink" title="变量初始化"></a>变量初始化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int count=0;  //拷贝初始化</span><br><span class="line">int count(0); //直接初始化</span><br><span class="line">int count=&#123;0&#125;; //列表初始化</span><br></pre></td></tr></table></figure><p><strong>左值和右值</strong>  </p><hr><h2 id="const-constexpr与auto-decltype"><a href="#const-constexpr与auto-decltype" class="headerlink" title="const|constexpr与auto|decltype"></a>const|constexpr与auto|decltype</h2><p>const 常量<br>constexpr 常量表达式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const int size=20；//运行时常量</span><br><span class="line">constexpr int limits=size+20;//编译技术时会是一个常数</span><br></pre></td></tr></table></figure></p><p>auto 自动类型说明符<br>decltype 类型指示符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto x=1.0;  //编译时用正确的类型替换auto</span><br><span class="line">decltype(ci) x=1; //只定义x为ci的类型，不赋初值</span><br><span class="line">decltype(f() ) y=sum; //定义y为f()的返回值类型</span><br></pre></td></tr></table></figure></p><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><h3 id="static-cast"><a href="#static-cast" class="headerlink" title="static_cast"></a>static_cast</h3><p>用于将一种数据类型转换成另一种数据类型，使用格式如下：<br>变量1 = static_cast&lt;变量1数据类型&gt;(另外一种数据类型变量或表达式);<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a = 1;</span><br><span class="line">float b;</span><br><span class="line">b = static_cast&lt;float&gt;(a);  //类似于C语言中的b = (float)a;</span><br></pre></td></tr></table></figure></p><h3 id="const-cast"><a href="#const-cast" class="headerlink" title="const_cast"></a>const_cast</h3><p>去除表达式中的const限定。用于指针、引用、变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const int i=0;</span><br><span class="line">int *j=&amp;i;  //错误</span><br><span class="line">j=const_cast_&lt;int *&gt;(&amp;i); //正确</span><br></pre></td></tr></table></figure></p><h3 id="dynamic-cast"><a href="#dynamic-cast" class="headerlink" title="dynamic_cast"></a>dynamic_cast</h3><p>执行派生类指针或引用与基类指针或引用之间的转换。</p><h3 id="reinterpret-cast-不常用"><a href="#reinterpret-cast-不常用" class="headerlink" title="reinterpret_cast 不常用"></a>reinterpret_cast 不常用</h3><p>从字面意思理解是一个“重新解释的类型转换”。也就是说对任意两个类型之间的变量我们都可以个使用reinterpret_cast在他们之间相互转换，无视类型信息。</p><h2 id="按位运算符"><a href="#按位运算符" class="headerlink" title="按位运算符"></a>按位运算符</h2><p>按位与运算符（&amp;）<br>按位或运算符（|）<br>异或运算符（^）<br>取反运算符（~）<br>左移运算符（&lt;&lt;） 右补0<br>右移运算符（&gt;&gt;） 左补0</p><p><font color="#EE0000"> <strong>不同长度的数据进行位运算</strong></font><br>如果两个不同长度的数据进行位运算时，系统会将二者按右端对齐，然后进行位运算。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;算术类型&lt;/li&gt;
&lt;li&gt;变量初始化&lt;/li&gt;
&lt;li&gt;const|constexpr&lt;/li&gt;
&lt;li&gt;auto|decltype&lt;/li&gt;
&lt;li&gt;类型转换
    
    </summary>
    
      <category term="C/C++" scheme="https://Cxiada.github.io/categories/C-C/"/>
    
    
      <category term="语言基础" scheme="https://Cxiada.github.io/tags/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>个人博客建站</title>
    <link href="https://Cxiada.github.io/2018/09/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"/>
    <id>https://Cxiada.github.io/2018/09/16/个人博客建站/</id>
    <published>2018-09-16T05:18:13.000Z</published>
    <updated>2018-09-18T16:21:09.332Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>  早就想着用Github用建个个人博客，刚开始试了官方推荐的jekyll，后来发现好多人多用hexo建站。我两个都试过了，觉得还是hexo好用<em>关键是hexo官方有中文文档</em>。<br>  目前的配置是Github<em>部署网站</em>+Hexo<em>建站工具</em>+next<em>主题</em>+HexoEditor<em>编辑器</em>+腾讯云<em>图床</em><br><a id="more"></a></p><h2 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1.下载安装"></a>1.下载安装</h2><ul><li>下载github安装，其中自带了git。</li><li>在github官网申请注册帐号，需要用到邮箱，注册后一定要记住三个东西：你的用户名(username)，你的密码(password)，以及你的邮箱(email)</li><li>安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></li><li>新建hexo文件夹，打开 Git Bash。<strong>接下来的命令均在Git Bash中执行</strong></li><li>安装 Hexo : <code>$npm install -g hexo</code></li><li>安装依赖包： <code>$npm install</code></li><li>执行<code>$hexo init</code> 初始化网站<strong>这时候用<code>hexo s</code>就能预览效果了</strong></li><li>新建Github仓库：仓库名<strong>必须</strong>为<code>你的Github名.github.io</code>，要不然就不能使用Github Pages服务了。。。</li></ul><h2 id="2-配置-SSH"><a href="#2-配置-SSH" class="headerlink" title="2.配置 SSH"></a>2.配置 SSH</h2><ul><li>本地生成公钥私钥<br>　<code>$ssh-keygen -t rsa -C &quot;你的邮件地址&quot;</code></li><li>添加公钥到 Github<ul><li>根据上一步的提示，找到公钥文件（默认为id_rsa.pub），用记事本打开，全选并复制。</li><li>登录 Github，右上角 头像 -&gt; Settings —&gt; SSH keys —&gt; Add SSH key。把公钥粘贴到key中，填好title并点击 Add key。</li><li>git bash中输入命令<code>$ssh -T git@github.com</code>，选yes，等待片刻可看到成功提示。</li></ul></li></ul><h2 id="3-NexT主题下载"><a href="#3-NexT主题下载" class="headerlink" title="3. NexT主题下载"></a>3. NexT主题下载</h2><p>　　 NexT 主题是由 <a href="https://github.com/iissnan" target="_blank" rel="noopener">iissnan</a> 大神所制作的一款简洁美观不失逼格的主题。下载方法有以下两种：  </p><ul><li>进入<code>博客根目录/themes/</code>, 执行<code>$git clone https://github.com/iissnan/hexo-theme-next.git</code></li><li>直接进入上面的链接，在项目主页download zip文件，然后解压到<code>博客根目录/themes/</code> 文件夹<h2 id="4-发布"><a href="#4-发布" class="headerlink" title="4. 发布"></a>4. 发布</h2>使用以下两条命令进行发布，发布成功后可在浏览器中使用<code>你的github名.github.io</code>进入你的博客~</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo clean</span><br><span class="line">$hexo d -g</span><br></pre></td></tr></table></figure><h2 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h2><h3 id="1-本地预览："><a href="#1-本地预览：" class="headerlink" title="1.本地预览："></a>1.本地预览：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo server//或 hexo s</span><br><span class="line">//然后打开浏览器输入localhost:4000可以预览博客效果，用于调试</span><br></pre></td></tr></table></figure><h3 id="2-新建文章"><a href="#2-新建文章" class="headerlink" title="2. 新建文章"></a>2. 新建文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo new post &quot;title&quot;</span><br><span class="line">//新文章位置：/source/_posts</span><br></pre></td></tr></table></figure><h3 id="3-新建页面"><a href="#3-新建页面" class="headerlink" title="3. 新建页面"></a>3. 新建页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hexo new page &quot;title&quot;</span><br></pre></td></tr></table></figure><h3 id="4-部署并生成"><a href="#4-部署并生成" class="headerlink" title="4. 部署并生成"></a>4. 部署并生成</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hexo d -g</span><br></pre></td></tr></table></figure><h3 id="5-清除生成的文件和缓存"><a href="#5-清除生成的文件和缓存" class="headerlink" title="5. 清除生成的文件和缓存"></a>5. 清除生成的文件和缓存</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hexo clean</span><br></pre></td></tr></table></figure><h3 id="推荐使用HexoEditor编辑器就不用手打命令了。"><a href="#推荐使用HexoEditor编辑器就不用手打命令了。" class="headerlink" title=" 推荐使用HexoEditor编辑器就不用手打命令了。"></a><font color="#EE0000"> <strong>推荐使用HexoEditor编辑器就不用手打命令了。</strong></font></h3><h2 id="4-next主题"><a href="#4-next主题" class="headerlink" title="4. next主题"></a>4. next主题</h2><h2 id="5-HexoEditor"><a href="#5-HexoEditor" class="headerlink" title="5. HexoEditor"></a>5. HexoEditor</h2><p>HexoEditor下载地址：<a href="https://github.com/zhuzhuyule/HexoEditor" target="_blank" rel="noopener">https://github.com/zhuzhuyule/HexoEditor</a><br>里面有详细安装说明<br>Tips<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//If find Error about download Electron faild ,you can try run those</span><br><span class="line">npm install -g electron@1.8.1</span><br></pre></td></tr></table></figure></p><h2 id="6-腾讯云图床"><a href="#6-腾讯云图床" class="headerlink" title="6. 腾讯云图床"></a>6. 腾讯云图床</h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><p><a href="https://lovenight.github.io/2015/11/10/Hexo-3-1-1-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/" target="_blank" rel="noopener">Hexo3.1.1静态博客搭建指南</a></p></li><li><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT使用文档</a></p></li><li><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档（中文版）</a></p></li><li><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档（中文版）</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;  早就想着用Github用建个个人博客，刚开始试了官方推荐的jekyll，后来发现好多人多用hexo建站。我两个都试过了，觉得还是hexo好用&lt;em&gt;关键是hexo官方有中文文档&lt;/em&gt;。&lt;br&gt;  目前的配置是Github&lt;em&gt;部署网站&lt;/em&gt;+Hexo&lt;em&gt;建站工具&lt;/em&gt;+next&lt;em&gt;主题&lt;/em&gt;+HexoEditor&lt;em&gt;编辑器&lt;/em&gt;+腾讯云&lt;em&gt;图床&lt;/em&gt;&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://Cxiada.github.io/categories/hexo/"/>
    
      <category term="next" scheme="https://Cxiada.github.io/categories/hexo/next/"/>
    
    
      <category term="hexo" scheme="https://Cxiada.github.io/tags/hexo/"/>
    
      <category term="next" scheme="https://Cxiada.github.io/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>创建图床</title>
    <link href="https://Cxiada.github.io/2018/09/15/%E5%88%9B%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
    <id>https://Cxiada.github.io/2018/09/15/创建图床/</id>
    <published>2018-09-15T09:22:54.000Z</published>
    <updated>2018-09-18T16:21:16.933Z</updated>
    
    <content type="html"><![CDATA[<ul><li>新浪微博相册图片支持外链，速度快，免费。用新浪微博相册可以为博客、写作平台打造一个免费的图床。  </li><li>也可以使用腾讯云的对象储存，个人实名以后每个月有大量的免费额度，供个人博客使用足够了。  </li></ul><a id="more"></a><h3 id="微博做图床"><a href="#微博做图床" class="headerlink" title=" 微博做图床"></a><font color="#9F79EE"> 微博做图床</font></h3><ol><li>注册微博账号</li><li>上传图片到微博相册</li><li>获取外链：点击图片-查看大图-右键图片复制图片链接，得到如下链接：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ww1.sinaimg.cn/large/sample.jpg</span><br></pre></td></tr></table></figure><p>同时还有其他大小可以选择<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://ww1.sinaimg.cn/thumbnail/sample.jpg   // 缩略图</span><br><span class="line">http://ww1.sinaimg.cn/small/sample.jpg       // 稍微大点的图</span><br><span class="line">http://ww1.sinaimg.cn/bmiddle/sample.jpg     // 再大点的图</span><br><span class="line">http://ww1.sinaimg.cn/large/sample.jpg       // 最大的</span><br></pre></td></tr></table></figure></p><h4 id="推荐使用picgo图库神器上传图片"><a href="#推荐使用picgo图库神器上传图片" class="headerlink" title=" 推荐使用picgo图库神器上传图片"></a><font color="#EE0000"> 推荐使用picgo图库神器上传图片</font></h4><p><img src="https://ws1.sinaimg.cn/small/007jzaWply1fvap7039dyj30jg0jg0u3.jpg" alt="微博图片测试"></p><h3 id="腾讯云oss做图床"><a href="#腾讯云oss做图床" class="headerlink" title=" 腾讯云oss做图床"></a><font color="#9F79EE"> 腾讯云oss做图床</font></h3><ol><li>注册腾讯云账号<br>网上也有推荐七牛云做图床的。但是要上传手持身份证照片。我嫌麻烦。腾讯云只用拿微信做个验证就好了。</li><li><p>创建储存桶。注意有两个关键的配置不能忽略<br>存储桶（bucket）访问权限<br>防盗链设置</p><h5 id="访问权限"><a href="#访问权限" class="headerlink" title="访问权限"></a>访问权限</h5><p>访问权限应设置为公有读私有写。因为我们要去读照片嘛。</p><h5 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h5><p>把自己的博客地址加进去  </p></li><li><p>使用腾讯云提供的cos客户端上传图片。右键点击获取图片链接。<br><strong><em>注意：</em></strong>如果没有把本地地址加入白名单，是不能看到预览图的。</p></li></ol><p><img src="https://blog-hexo-1257634887.cos.ap-beijing.myqcloud.com/3.jpg" alt="腾讯云外链测试"></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;新浪微博相册图片支持外链，速度快，免费。用新浪微博相册可以为博客、写作平台打造一个免费的图床。  &lt;/li&gt;
&lt;li&gt;也可以使用腾讯云的对象储存，个人实名以后每个月有大量的免费额度，供个人博客使用足够了。  &lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://Cxiada.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://Cxiada.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
